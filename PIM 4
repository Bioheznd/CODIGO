
#include <stdio.h>
#include <stdlib.h>
#include <stdbool.h>
#include <string.h>
#include <ctype.h>
#include <stdbool.h>

#define MAX_SEAT_ROWS 2
#define SEATS_PER_ROW 24
#define MAX_PRESENTATIONS 1

int seatArray[MAX_SEAT_ROWS][SEATS_PER_ROW];
int rowNumber, seatNumber, ticketValue;
int presentation, dayOfWeek, ticketPrice;
String presentationDate, presentationName;

int main(int argc, char *argv[], char args) {
	choosePresentation();
	showPresentationInfo();
	
	choosePresentationDate();
	showPresentationDateInfo();
	
	askForBenefits();
	
	showTicketPrice();
	
	showOptions();
	
	system("PAUSE");
    return 0;
}

void choosePresentation() {
	while(true) {
		printf("Escolha a peça entre as opções abaixo\n");
		printf("\n");
		printf("1 - Espetáculo Teatral Corpo de Dor\n");
		printf("\n");
		scanf("%d", &presentation);
		
		if(isPresentationInRange()) {
			setPresentationName();
			setTicketPrice();
			break;
		} else {
			printf("\n");
			printf("Peça inexistente.\n");
			printf("\n");
		}
	}
}

void showPresentationInfo() {
	printf("Espetáculo teatral %c\n", presentationName);
	printf("Preço R$ %d\n", ticketPrice);
	printf("\n");
}

void choosePresentationDate() {
	while(true) {
		printf("Digite o número referente ao dia da semana que deseja comprar\n");
		printf("\n");
		printf("|~~~~~~~~~~~~~~~~~~~~~~~~~~~~|\n");
		printf("| 1 - Domingo    01-Dez-2019 |\n");
		printf("| 2 - Segunda    02-Dez-2019 |\n");
		printf("| 3 - Terça      03-Dez-2019 |\n");
		printf("| 4 - Quarta     04-Dez-2019 |\n");
		printf("| 5 - Quinta     05-Dez-2019 |\n");
		printf("| 6 - Sexta      06-Dez-2019 |\n");
		printf("| 7 - Sábado     07-Dez-2019 |\n");
		printf("|____________________________|\n");
		scanf("%d", &dayOfWeek);
		
		if(isDayOfWeekInRange()) {
			setPresentationDate();
			break;
		} else {
			printf("Escolha um dia da semana válido!\n");
			printf("\n");
		}
	}
}

void showPresentationDateInfo() {
	printf(presentationDate);
	printf("\n");
}

void askForBenefits() {
	if(isTuesday()) {
		askForGratuityBenefit();
	} else {
		askForHalfEntranceBenefit();
	}
}

void showTicketPrice() {
	printf("O valor do ingresso é R$ %d\n", ticketPrice);
	printf("\n");
}

void showOptions() {
	int option;
	
	while(true) {
		printf("\n");
		printf("Escolha");
		printf("1 - Escolher Poltrona");
		printf("2 - Mostrar mapa de ocupação");
		printf("3 - Imprimir Ticket");
		scanf("%d", &option);
		
		switch(option) {
			case 1:
				chooseSeat();
                break;
			case 2:
				showSeatMap();
                break;
			case 3:
				showTicket();
                break;
		}                                                      
	}
}

void askForGratuityBenefit() {
	int haveGratuityBenefit;
	
	printf("\n");
	printf("O cliente possui benefício de Gratuidade de Ingresso? (1 - sim / 2 - nao) ");
	scanf("%d", &haveGratuityBenefit);
	
	if((bool)haveGratuityBenefit) {
		printf("OK, Benefício da GRATUIDADE foi aplicado.\n");
		printf("\n");
		
		ticketPrice = 0;
	} else {
		printf("Não.\n");
		printf("Prosseguindo...\n");
		printf("\n");
		
		askForHalfEntranceBenefit();
	}
}

void askForHalfEntranceBenefit() {
	int haveHalfEntranceBenefit;
	
	printf("\n");
	printf("O cliente possui benefício de meia entrada? (1 - sim / 2 - nao) ");
	scanf("%d", &haveHalfEntranceBenefit);
	
	if((bool)haveHalfEntranceBenefit) {
		printf("Sim.\n");
		printf("Insira o motivo.\n");
		printf("Não esqueça de solicitar a documentação.\n");
		printf("1 - Maior de 60 anos.\n");
		printf("2 - Professor da rede pública de ensino.\n");
		printf("3 - Criança de 2 à 12 anos.\n");
		printf("4 - Estudante.\n");
		scanf("%d", &halfEntranceReason);
		
		ticketPrice /= 2;
	} else {
		printf("Não.\n");
		printf("Prosseguindo...\n");
		printf("\n");
	}
}

void chooseSeat() {
	if(isTheaterFull()) {
		printf("\n");
		printf("Teatro lotado.");
	} else {
		printf("\n");
		printf("Escolha sua fileira ");
		scanf("%d", &rowNumber);
		
		printf("\n");
		printf("Número da poltrona (1 à 24): ");
		scanf("%d", &seatNumber);
		
		if(isSeatSelectedFree()) {
			acceptPaymentOrder();
		} else {
			recusePaymentOrder();
		}
	}
}

void showSeatMap() {
	for(int i = 0; i < MAX_SEAT_ROWS; i++) {
		int seatRow[] = seatArray[i];
		
		printf("Fileira %d\n", i+1);
		
		for(int j = 0; j < SEATS_PER_ROW; j++) {
			if(isSeatFree(seatRow[j])) {
				printf("\t%d - Livre\n", j+1);
			} else {
				printf("\t%d - Ocupado\n", j+1);
			}
		}
		
		printf("\n");
	}
}

void showTicket() {
	printf("\n");
	printf("Ticket do Espetáculo Teatral %c\n", presentationName);
	printf("\n");
	printf("Fileira %d\n", rowNumber);
	printf("Poltrona %d\n", seatNumber);
	printf("Valor do ingresso %d\n", ticketValue);
	printf("\n");
	printf("Data %c\n", presentationDate);
}

void acceptPaymentOrder() {
	seatArray[rowNumber-1][seatNumber-1] = 1;
	
	printf("\n");
	printf("Venda da poltrona %d - %d efetivada.\n", rowNumber, seatNumber);
}

void recusePaymentOrder() {
	printf("\n");
	printf("A poltrona %d - %d já está ocupada.\n", rowNumber, seatNumber);
}

void setPresentationName() {
	switch(presentation) {
		case 1:
			presentationName = "Corpo de Dor";
			break;
	}
}

void setTicketPrice() {
	switch(presentation) {
		case 1:
			ticketPrice = 30;
			break;
	}
}

void setPresentationDate() {
	switch(dayOfWeek) {
		case 1:
			presentationDate = "Domingo 01-Dez-2019";
			break;
		case 2:
			presentationDate = "Segunda-feira 02-Dez-2019";
			break;
	    case 3:
			presentationDate = "Terça-feira 03-Dez-2019";
			break;
		case 4: 
			presentationDate = "Quarta-feira 04-Dez-2019";
			break;
		case 5: 
			presentationDate = "Quinta-feira 05-Dez-2019";
			break;
		case 6: 
			presentationDate = "Sexta-feira 06-Dez-2019";
			break;
		case 7: 
			presentationDate = "Sábado 07-Dez-2019";
			break;
	}
}

bool isPresentationInRange() {
	return presentation > 0 && presentation <= MAX_PRESENTATIONS;
}

bool isDayOfWeekInRange() {
	return dayOfWeek > 0 && dayOfWeek <= 7
}

bool isTuesday() {
	return dayOfWeek == 3;
}

bool isSeatSelectedFree() {
	return seatArray[rowNumber-1][seatNumber-1] == 0;
}

bool isTheaterFull() {
	int ocupedSeats = 0;
	
	for(int seatRow[] : seatArray) {
		for(int seat : seatRow) {
			ocupedSeats++;
		}
	}
	
	return ocupedSeats < (MAX_SEAT_ROWS * SEATS_PER_ROW);
}

bool isSeatFree(int seat) {
	return seat == 0;
}



	

