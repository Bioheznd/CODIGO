
#include <stdio.h>
#include <stdlib.h>
#include <stdbool.h>
#include <string.h>
#include <ctype.h>
#include <stdbool.h>

#define MAX_SEAT_ROWS 2
#define SEATS_PER_ROW 24
#define MAX_PRESENTATIONS 1

int seatArray[MAX_SEAT_ROWS][SEATS_PER_ROW];
int rowNumber, seatNumber;
int presentation, dayOfWeek, ticketPrice;
int halfEntranceReason;
const char *presentationDate, *presentationName;

void choosePresentation();
void showPresentationInfo();
void choosePresentationDate();
void showPresentationDateInfo();
void askForBenefits();
void showTicketPrice();
void showOptions();

void setPresentationName();
void setTicketPrice();

void setPresentationDate();

void askForGratuityBenefit();
void askForHalfEntranceBenefit();

void chooseSeat();
void showSeatMap();
void showTicket();

void chooseSeatRowNumber();
void chooseSeatNumber();
void verifyPaymentOrder();
void acceptPaymentOrder();
void recusePaymentOrder();

bool isPresentationInRange();
bool isDayOfWeekInRange();
bool isTuesday();
bool isOptionInRange(int option);
bool isGratuityBenefitInRange(int haveGratuityBenefit);
bool isHalfEntranceBenefitInRange(int haveHalfEntranceBenefit);
bool isRowNumberInRange();
bool isSeatNumberInRange();
bool isSeatSelectedFree();
bool isTheaterFull();
bool isSeatOcuped(int seat);

int main(int argc, char *argv[], char *args[]) {
	choosePresentation();
	showPresentationInfo();
	
	choosePresentationDate();
	showPresentationDateInfo();
	
	askForBenefits();
	
	showTicketPrice();
	
	showOptions();
	
	system("PAUSE");
    return 0;
}

void choosePresentation() {
	do {
		printf("Escolha a peça entre as opções abaixo\n");
		printf("\t1 - Espetáculo Teatral Corpo de Dor\n");
		printf("\n");
		scanf("%d", &presentation);
		
		if(isPresentationInRange()) {
			setPresentationName();
			setTicketPrice();
			break;
		} else {
			printf("\n");
			printf("Peça inexistente.\n");
			printf("\n");
		}
	} while(!isPresentationInRange());
}

void showPresentationInfo() {
	printf("\n");
	printf("Espetáculo teatral %s\n", presentationName);
	printf("Preço R$ %d\n", ticketPrice);
	printf("\n");
}

void choosePresentationDate() {
	do {
		printf("Digite o número referente ao dia da semana que deseja comprar\n");
		printf("\n");
		printf("|~~~~~~~~~~~~~~~~~~~~~~~~~~~~|\n");
		printf("| 1 - Domingo    01-Dez-2019 |\n");
		printf("| 2 - Segunda    02-Dez-2019 |\n");
		printf("| 3 - Terça      03-Dez-2019 |\n");
		printf("| 4 - Quarta     04-Dez-2019 |\n");
		printf("| 5 - Quinta     05-Dez-2019 |\n");
		printf("| 6 - Sexta      06-Dez-2019 |\n");
		printf("| 7 - Sábado     07-Dez-2019 |\n");
		printf("|____________________________|\n");
		printf("\n");
		scanf("%d", &dayOfWeek);
		
		if(isDayOfWeekInRange()) {
			setPresentationDate();
			break;
		} else {
			printf("Escolha um dia da semana válido!\n");
			printf("\n");
		}
	} while(!isDayOfWeekInRange());
}

void showPresentationDateInfo() {
	printf("\n");
	printf("%s\n", presentationDate);
	printf("\n");
}

void askForBenefits() {
	if(isTuesday()) {
		askForGratuityBenefit();
	} else {
		askForHalfEntranceBenefit();
	}
}

void showTicketPrice() {
	printf("O valor do ingresso é R$ %d\n", ticketPrice);
	printf("\n");
}

void showOptions() {
	int option;
	
	do {
		printf("\n");
		printf("Escolha\n");
		printf("\t1 - Escolher Poltrona\n");
		printf("\t2 - Mostrar mapa de ocupação\n");
		printf("\t3 - Imprimir Ticket\n");
		scanf("%d", &option);
		
		if(isOptionInRange(option)) {
			switch(option) {
				case 1:
					chooseSeat();
  	              break;
				case 2:
					showSeatMap();
    	            break;
				case 3:
					showTicket();
 	               break;
			}
		} else {
			printf("Opção inexistente\n");
			printf("\n");
		}
	} while(!isOptionInRange(option));
}

void askForGratuityBenefit() {
	int haveGratuityBenefit;
	
	printf("O cliente possui benefício de Gratuidade de Ingresso? (1 - sim / 2 - nao)\n");
	scanf("%d", &haveGratuityBenefit);
	
	do {
		if(isGratuityBenefitInRange(haveGratuityBenefit)) {
			switch(haveGratuityBenefit) {
				case 1:
					printf("OK, Benefício da Gratuidade foi aplicado.\n");
					printf("\n");
					
					ticketPrice = 0;
					break;
				case 2:
					printf("Não.\n");
					printf("Prosseguindo...\n");
					printf("\n");
					
					askForHalfEntranceBenefit();
					break;
			}
		} else {
			printf("Opção inexistente\n");
			printf("\n");
		}
	} while(!isGratuityBenefitInRange(haveGratuityBenefit));
}

void askForHalfEntranceBenefit() {
	int haveHalfEntranceBenefit;
	
	printf("\n");
	printf("O cliente possui benefício de meia entrada? (1 - sim / 2 - nao)\n");
	scanf("%d", &haveHalfEntranceBenefit);
	
	do {
		if(isHalfEntranceBenefitInRange(haveHalfEntranceBenefit)) {
			switch(haveHalfEntranceBenefit) {
				case 1:
					printf("Sim.\n");
					printf("Insira o motivo.\n");
					printf("Não esqueça de solicitar a documentação.\n");
					printf("1 - Maior de 60 anos.\n");
					printf("2 - Professor da rede pública de ensino.\n");
					printf("3 - Criança de 2 à 12 anos.\n");
					printf("4 - Estudante.\n");
					scanf("%d", &halfEntranceReason);
					
					ticketPrice /= 2;
					break;
				case 2:
					printf("Não.\n");
					printf("Prosseguindo...\n");
					printf("\n");
					break;
			}
		} else {
			printf("Opção inexistente\n");
			printf("\n");
		}
	} while(!isHalfEntranceBenefitInRange(haveHalfEntranceBenefit));
}

void chooseSeat() {
	if(isTheaterFull()) {
		printf("\n");
		printf("Teatro lotado.\n");
	} else {
		chooseSeatRowNumber();
	}
}

void showSeatMap() {
	for(int i = 0; i < MAX_SEAT_ROWS; i++) {
		printf("Fileira %d\n", i+1);
		
		for(int j = 0; j < SEATS_PER_ROW; j++) {
			if(isSeatOcuped(seatArray[i][j])) {
				printf("\t%d - Ocupado\n", j+1);
			} else {
				printf("\t%d - Livre\n", j+1);
			}
		}
		
		printf("\n");
	}
}

void showTicket() {
	printf("\n");
	printf("\n");
	printf("Ticket do Espetáculo Teatral %s\n", presentationName);
	printf("\n");
	printf("Fileira %d\n", rowNumber);
	printf("Poltrona %d\n", seatNumber);
	printf("Valor do ingresso %d\n", ticketPrice);
	printf("\n");
	printf("Data %s\n", presentationDate);
	printf("\n");
}

void chooseSeatRowNumber() {
	do {
		printf("\n");
		printf("Escolha sua fileira\n");
		scanf("%d", &rowNumber);
		
		if(isRowNumberInRange()) {
			chooseSeatNumber();
		} else {
			printf("Fileira inexistente\n");
			printf("\n");
		}
	} while(!isRowNumberInRange());
}

void chooseSeatNumber() {
	do {
		printf("\n");
		printf("Número da poltrona (1 à 24)\n");
		scanf("%d", &seatNumber);
		
		if(isSeatNumberInRange()) {
			verifyPaymentOrder();
		} else {
			printf("Assento inexistente\n");
			printf("\n");
		}
	} while(!isSeatNumberInRange());
}

void verifyPaymentOrder() {
	if(isSeatSelectedFree()) {
		acceptPaymentOrder();
	} else {
		recusePaymentOrder();
	}
}

void acceptPaymentOrder() {
	seatArray[rowNumber-1][seatNumber-1] = 1;
	
	printf("\n");
	printf("Venda da poltrona %d - %d efetivada.\n", rowNumber, seatNumber);
}

void recusePaymentOrder() {
	printf("\n");
	printf("A poltrona %d - %d já está ocupada.\n", rowNumber, seatNumber);
}

void setPresentationName() {
	switch(presentation) {
		case 1:
			presentationName = "Corpo de Dor";
			break;
	}
}

void setTicketPrice() {
	switch(presentation) {
		case 1:
			ticketPrice = 30;
			break;
	}
}

void setPresentationDate() {
	switch(dayOfWeek) {
		case 1:
			presentationDate = "Domingo 01-Dez-2019";
			break;
		case 2:
			presentationDate = "Segunda-feira 02-Dez-2019";
			break;
	    case 3:
			presentationDate = "Terça-feira 03-Dez-2019";
			break;
		case 4: 
			presentationDate = "Quarta-feira 04-Dez-2019";
			break;
		case 5: 
			presentationDate = "Quinta-feira 05-Dez-2019";
			break;
		case 6: 
			presentationDate = "Sexta-feira 06-Dez-2019";
			break;
		case 7: 
			presentationDate = "Sábado 07-Dez-2019";
			break;
	}
}

bool isPresentationInRange() {
	return presentation > 0 && presentation <= MAX_PRESENTATIONS;
}

bool isDayOfWeekInRange() {
	return dayOfWeek > 0 && dayOfWeek < 8;
}

bool isTuesday() {
	return dayOfWeek == 3;
}

bool isOptionInRange(int option) {
	return option > 0 && option < 4;
}

bool isGratuityBenefitInRange(int haveGratuityBenefit) {
	return haveGratuityBenefit > 0 && haveGratuityBenefit < 3;
}

bool isHalfEntranceBenefitInRange(int haveHalfEntranceBenefit) {
	return haveHalfEntranceBenefit > 0 && haveHalfEntranceBenefit < 3;
}

bool isRowNumberInRange() {
	return rowNumber > 0 && rowNumber < MAX_SEAT_ROWS;
}

bool isSeatNumberInRange() {
	return seatNumber > 0 && seatNumber < SEATS_PER_ROW;
}

bool isSeatSelectedFree() {
	return seatArray[rowNumber-1][seatNumber-1] == 0;
}

bool isTheaterFull() {
	int ocupedSeats = 0;
	
	for(int i = 0; i < MAX_SEAT_ROWS; i++) {
		for(int j = 0; j < SEATS_PER_ROW; j++) {
			if(isSeatOcuped(seatArray[i][j])) {
				ocupedSeats++;
			}
		}
	}
	
	return (MAX_SEAT_ROWS * SEATS_PER_ROW) < ocupedSeats;
}

bool isSeatOcuped(int seat) {
	return seat == 1;
}
